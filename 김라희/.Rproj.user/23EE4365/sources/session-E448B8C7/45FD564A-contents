#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/


library(shiny)
library(plotly)
library(ggplot2)
library(gganimate)
library(hrbrthemes)


# 데이터터셋 준비
harbor <- read.csv('harbor.csv')

# 그래프1 ---
total <- subset(harbor, Measures=='총계', select=-합계)

# 2017 ~ 2021년 품목별 거래량 중앙값값
y2017 <- summary(total[1:4, 5:36])[3,]
y2018 <- summary(total[5:8, 5:36])[3,]
y2019 <- summary(total[9:12, 5:36])[3,]
y2020 <- summary(total[13:16, 5:36])[3,]
y2021 <- summary(total[17:20, 5:36])[3,]

value <- gsub('\\D', '', y2017)
value <- as.numeric(value)

value2 <- gsub('\\D', '', y2018)
value2 <- as.numeric(value2)

value3 <- gsub('\\D', '', y2019)
value3 <- as.numeric(value3)

value4 <- gsub('\\D', '', y2020)
value4 <- as.numeric(value4)

value5 <- gsub('\\D', '', y2021)
value5 <- as.numeric(value5)

# 품목명 리스트
column <- names(harbor)[6:37]

# 년도별 품목별 중앙값 데이터프레임 생성
items <- data.frame(column, value, value2, value3, value4, value5)
names(items) <- c('품목명', '2017', '2018', '2019', '2020', '2021')

items2 <- items %>%
  arrange(y) %>%
  mutate(x=factor(품목명, 품목명))

p <- ggplot(items2, aes(x=x, y=items2$`2017`)) +
  geom_segment(
    aes(x=x, xend=x, y=0, yend=items2$`2017`)
  ) +
  geom_point(size=4, pch=21, bg=4, col=1) +
  theme_ipsum() +
  coord_flip() +
  theme(
    legend.position="none"
  ) +
  xlab("") +
  ylab("단위: 톤") +
  ggtitle("2017년 품목별 수출입 거래량") +
  transition_time(c(items2$`2017`, items2$`2018`))

p


# 그래프2 ---
# 조회년도, 항만명, 입출항구분, Measures, 합계 추출
harbor2 <- harbor[c(1:5)]

# 국적선, 외국선, 연안선 합계 추출
condition <- (harbor2$Measures=='국적선' | harbor2$Measures=='외국선' | harbor2$Measures=='연안선')
harbor2 <- harbor2[condition,]


# 년도별 입항, 출항, 입항환적, 출항환적 합계(톤) 변화
ggplot(harbor2) +
  aes(x=입출항구분, fill=Measures, weight=합계) +
  geom_bar(position='dodge') +
  scale_fill_viridis_d(option='viridis', direction = 1) +
  labs(title='2017 ~ 2021년 광양항 입출항환적 거래량') +
  theme_light() +
  theme(legend.position='left',
        plot.title=element_text(size=24L, hjust=0.5))


  # gganimate specific bits
  # transition_states(
  #   frame,
  #   transition_length = 2,
  #   state_length = 1
  # ) +
  # ease_aes('sine-in-out')



# Define UI for application
ui <- fluidPage(

    # Application title
    titlePanel("2017 ~ 2021 광양항 품목별 수출입 통계")
  
)


# Define server logic
server <- function(input, output) {
  input$count
}  

# Run the application
shinyApp(ui, server)
