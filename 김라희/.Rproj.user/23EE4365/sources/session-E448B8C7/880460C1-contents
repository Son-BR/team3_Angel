# Data Visualization
#
# ggplot(data) 개체 생성 + geom_function()으로 그래프 타입 + coord_func + facet_func
# ggplot(data=) + geom_function(mapping=aes(mapping data), stat=, position=) + coord_function + facet_function
# --------------------------------------------------
# [ ggplot2 mpg data ]
mpg = ggplot2::mpg
str(mpg)
head(mpg)

p = ggplot(data=mpg, mapping=aes(x=displ, y=hwy))
p + geom_point()
p + geom_point(mapping = aes(color=class))

head(colors(), 10)

p + geom_point(mapping = aes(color=class, size=class))

# shape range 0~20
p + geom_point(mapping = aes(color=class, shape=class))

p + geom_point(mapping = aes(color=class, size=class, alpha=0.3))

p + geom_point(color="tomato") + facet_wrap(~class, nrow=2)
p + geom_point(color="tomato") + facet_grid(drv ~ cyl)
p + geom_point(color="blue") + geom_smooth(color="cyan")
p + geom_point(mapping = aes(color=class)) + geom_smooth(color="cyan")

ggplot(data=mpg) + geom_point(mapping=aes(x=displ, y=hwy, color=class), position="jitter")
ggplot(data=mpg, mapping=aes(x=class, y=hwy)) + geom_boxplot(fill="lightyellow")

# ggplot boxplot 방향 회전
ggplot(data=mpg, mapping=aes(x=class, y=hwy)) + geom_boxplot(fill="lightyellow") + coord_flip()

# --------------------------------------------------
# [ ggplot2 diamonds data ]
data("diamonds")
str(diamonds)

p = ggplot(data=diamonds)

# bar 차트 그리기
# x축에 mapping할 cut은 컬럼 데이터  
p + geom_bar(mapping=aes(x=cut), fill="steelblue")

# stat_count는 해당 데이터를 기준으로 그룹별 집계를 하는 함수
p + stat_count(mapping=aes(x=cut, fill=clarity), position="fill")
p + stat_count(mapping=aes(x=cut, fill=clarity), position="dodge")
p + stat_count(mapping=aes(x=cut, fill="clarity"))

# (1) ggplot 안에 data, mapping option 적어도 됨
ggplot(data=diamonds, mapping=aes(x=cut, fill=cut)) + geom_bar(show.legend=F, width=0.7)
# (2)
p + geom_bar(show.legend=F, width=1) + labs(x=NULL, y=NULL) + theme(aspect.ratio=1) + coord_polar()
  
# [ 지도 그리려면 geom_polygon ]
world = map_data("world")
ggplot(data=world, mapping=aes(long, lat, group=group)) + geom_polygon(fill="lightyellow", color="blue")

# --------------------------------------------------
# 지도 여러개 그리려면
p = ggplot(data=mpg, aes(displ, hwy)) + geom_point(aes(color=class)) + geom_smooth(se=FALSE)

# xlabs, ylabs, title 같은 설정 따로 추가하려면
p + labs(title="Feul efficeincy VS Engine size",
         subtitle="Two seaters are exceptional",
         caption="Data from fueleconomy.gov",
         x="Engine displacement (L)",
         y="Highway fuel economy (mpg)",
         color="Car Type")

# --------------------------------------------------
# 숫자 크기 순서대로 인덱스를 알려주는 row_number
n = c(33, 40, 10)
row_number(n)

library(tidyverse)
bestInClass = mpg %>%
  group_by(class) %>%
  filter(row_number(desc(hwy))==1)
